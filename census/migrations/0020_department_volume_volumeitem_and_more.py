# Generated by Django 4.2.3 on 2024-01-12 10:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('census', '0019_companydatabase_created_date_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
            ],
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('edit_date', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('department', models.ManyToManyField(related_name='volume', to='census.department', verbose_name='Подразделение')),
            ],
        ),
        migrations.CreateModel(
            name='VolumeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('edit_date', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('volume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='census.volume')),
            ],
        ),
        migrations.AlterModelOptions(
            name='companydatabase',
            options={'ordering': ['-created_date'], 'verbose_name': 'Организация', 'verbose_name_plural': 'Организации'},
        ),
        migrations.AddField(
            model_name='census',
            name='tender',
            field=models.BooleanField(default=False, verbose_name='Тендер'),
        ),
        migrations.CreateModel(
            name='VolumeItemValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(verbose_name='Значение объема')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('edit_date', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('volume_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='census.volumeitem')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активность')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('edit_date', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('department', models.ManyToManyField(related_name='equipment_list', to='census.department', verbose_name='Подразделение')),
            ],
        ),
        migrations.AddField(
            model_name='accessoriescategory',
            name='department',
            field=models.ManyToManyField(related_name='accessories_category', to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='carslist',
            name='department',
            field=models.ManyToManyField(related_name='cars', to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='census',
            name='department',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='census',
            name='equipment',
            field=models.ManyToManyField(blank=True, default=None, related_name='census_equipments', to='census.equipmentlist'),
        ),
        migrations.AddField(
            model_name='census',
            name='volume',
            field=models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, to='census.volume'),
        ),
        migrations.AddField(
            model_name='filterlist',
            name='department',
            field=models.ManyToManyField(related_name='filters', to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='oillist',
            name='department',
            field=models.ManyToManyField(related_name='oils', to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='pointcategory',
            name='department',
            field=models.ManyToManyField(related_name='category', to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='pointtypes',
            name='department',
            field=models.ManyToManyField(related_name='types', to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='pointvectors',
            name='department',
            field=models.ManyToManyField(related_name='vectors', to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='providerlist',
            name='department',
            field=models.ManyToManyField(related_name='providers', to='census.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='stotypelist',
            name='department',
            field=models.ManyToManyField(related_name='sto_types', to='census.department', verbose_name='Подразделение'),
        ),
    ]
